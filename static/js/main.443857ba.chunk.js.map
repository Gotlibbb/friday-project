{"version":3,"sources":["f1-main/m1-ui/header/header.module.css","f1-main/m1-ui/header/Header.tsx","f1-main/m1-ui/u1-components/login/Login.tsx","f1-main/m1-ui/u1-components/registration/Registration.tsx","f1-main/m1-ui/u1-components/profile/Profile.tsx","f1-main/m1-ui/u1-components/passwordRecovery/PasswordRecovery.tsx","f1-main/m1-ui/u1-components/newPassword/NewPassword.tsx","f1-main/m1-ui/u1-components/test/Test.tsx","f1-main/m1-ui/u1-components/notFound404/NotFound.tsx","f1-main/m1-ui/routes/Routes.tsx","f1-main/m1-ui/app/App.tsx","reportWebVitals.ts","f1-main/m2-bll/b1-reducers/loginReducer.ts","f1-main/m2-bll/b1-reducers/registrationReducer.ts","f1-main/m2-bll/b1-reducers/passwordReducer.ts","f1-main/m2-bll/b1-reducers/profileReducer.ts","f1-main/m2-bll/reduxStore.ts","index.tsx"],"names":["module","exports","Header","className","styles","headerBlock","to","Login","Registration","Profile","PasswordRecovery","NewPassword","Test","NotFound","Routes","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducers","combineReducers","login","state","action","type","profile","registration","password","store","createStore","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0GACAA,EAAOC,QAAU,CAAC,YAAc,8B,mKCejBC,EAXA,WACX,OAAO,sBAAKC,UAAWC,IAAOC,YAAvB,UACH,cAAC,IAAD,CAASC,GAAI,SAAb,mBACA,cAAC,IAAD,CAASA,GAAI,gBAAb,0BACA,cAAC,IAAD,CAASA,GAAI,WAAb,qBACA,cAAC,IAAD,CAASA,GAAI,qBAAb,+BACA,cAAC,IAAD,CAASA,GAAI,gBAAb,0BACA,cAAC,IAAD,CAASA,GAAI,QAAb,sB,OCZKC,EAAQ,WACjB,OAAO,8CCDEC,EAAe,WACxB,OAAO,qDCDEC,EAAU,WACnB,OAAO,gDCDEC,EAAmB,WAC5B,OAAO,yDCDEC,EAAc,WACvB,OAAO,oDCDEC,EAAO,WAChB,OAAO,6CCDEC,EAAW,WACpB,OAAO,qDCuBIC,EAdA,WACX,OAAO,mCACH,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAM,SAAb,SAAuB,cAAC,EAAD,MACvB,cAAC,IAAD,CAAOA,KAAM,gBAAb,SAA8B,cAAC,EAAD,MAC9B,cAAC,IAAD,CAAOA,KAAM,WAAb,SAAyB,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOA,KAAM,qBAAb,SAAmC,cAAC,EAAD,MACnC,cAAC,IAAD,CAAOA,KAAM,gBAAb,SAA8B,cAAC,EAAD,MAC9B,cAAC,IAAD,CAAOA,KAAM,QAAb,SAAsB,cAAC,EAAD,MACtB,cAAC,IAAD,UAAO,cAAC,EAAD,YCFJC,EAZH,WACR,OACI,sBAAKb,UAAU,MAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,QCKGc,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,uBCLVQ,EAAiC,GCCjCA,EAAiC,GCAjCA,EAAiC,GCAjCA,EAAiC,GCGjCC,EAAWC,YAAgB,CAC3BC,MJGwB,WAAgG,IAA/FC,EAA8F,uDAApEJ,EAAcK,EAAsD,uCAEvH,OAAQA,EAAOC,MAEX,IAAK,YACD,OAAO,eAAIF,GAEf,QACI,OAAOA,IIVfG,QDG0B,WAAmG,IAAlGH,EAAiG,uDAAvEJ,EAAcK,EAAyD,uCAE5H,OAAQA,EAAOC,MAEX,IAAK,YACD,OAAO,eAAIF,GAEf,QACI,OAAOA,ICVfI,aHE+B,WAAwG,IAAvGJ,EAAsG,uDAA5EJ,EAAcK,EAA8D,uCAEtI,OAAQA,EAAOC,MAEX,IAAK,YACD,OAAO,eAAIF,GAEf,QACI,OAAOA,IGTfK,SFC2B,WAAoG,IAAnGL,EAAkG,uDAAxEJ,EAAcK,EAA0D,uCAE9H,OAAQA,EAAOC,MAEX,IAAK,YACD,OAAO,eAAIF,GAEf,QACI,OAAOA,MELRM,EAAeC,YAAYV,GAGtCW,OAAOF,MAAQA,ECVfG,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACI,cAAC,IAAD,UACI,cAAC,EAAD,UAIZM,SAASC,eAAe,SAM5B1B,M","file":"static/js/main.443857ba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerBlock\":\"header_headerBlock__WYvA1\"};","import React from \"react\";\r\nimport styles from './header.module.css'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nconst Header = () => {\r\n    return <div className={styles.headerBlock}>\r\n        <NavLink to={'/login'}>login</NavLink>\r\n        <NavLink to={'/registration'}>registration</NavLink>\r\n        <NavLink to={'/profile'}>profile</NavLink>\r\n        <NavLink to={'/password-recovery'}>password-recovery</NavLink>\r\n        <NavLink to={'/new-password'}>new-password</NavLink>\r\n        <NavLink to={'/test'}>test</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default Header","export const Login = () => {\r\n    return <>\r\n        login\r\n    </>;\r\n}","export const Registration = () => {\r\n    return <>\r\n        Registration\r\n    </>;\r\n}","export const Profile = () => {\r\n    return <>\r\n        Profile\r\n    </>;\r\n}","export const PasswordRecovery = () => {\r\n    return <>\r\n        PasswordRecovery\r\n    </>;\r\n}","export const NewPassword = () => {\r\n    return <>\r\n        NewPassword\r\n    </>;\r\n}","export const Test = () => {\r\n    return <>\r\n        Test\r\n    </>;\r\n}","export const NotFound = () => {\r\n    return <>\r\n        NotFound 404\r\n    </>;\r\n}","import React from \"react\";\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport {Login} from \"../u1-components/login/Login\";\r\nimport {Registration} from \"../u1-components/registration/Registration\";\r\nimport {Profile} from \"../u1-components/profile/Profile\";\r\nimport {PasswordRecovery} from \"../u1-components/passwordRecovery/PasswordRecovery\";\r\nimport {NewPassword} from \"../u1-components/newPassword/NewPassword\";\r\nimport {Test} from \"../u1-components/test/Test\";\r\nimport {NotFound} from \"../u1-components/notFound404/NotFound\";\r\n\r\nconst Routes = () => {\r\n    return <>\r\n        <Switch>\r\n            <Route path={'/login'}><Login/></Route>\r\n            <Route path={'/registration'}><Registration/></Route>\r\n            <Route path={'/profile'}><Profile/></Route>\r\n            <Route path={'/password-recovery'}><PasswordRecovery/></Route>\r\n            <Route path={'/new-password'}><NewPassword/></Route>\r\n            <Route path={'/test'}><Test/></Route>\r\n            <Route><NotFound/></Route>\r\n        </Switch>\r\n    </>\r\n}\r\n\r\nexport default Routes","import React from 'react';\nimport './App.css';\nimport Header from '../header/Header';\nimport Routes from '../routes/Routes';\n\nconst App = () => {\n    return (\n        <div className=\"App\">\n            <Header/>\n            <Routes/>\n        </div>\n\n\n    );\n}\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","type InitialStateType = {\r\n\r\n}\r\n\r\nlet initialState: InitialStateType = {\r\n\r\n}\r\n\r\nexport type DispatchActionTypeLogin =\r\n    | ReturnType<typeof someActionCreator>\r\n\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: DispatchActionTypeLogin): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case \"SOME-TYPE\": {\r\n            return {...state}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const someActionCreator = () => {\r\n    return {\r\n        type: \"SOME-TYPE\"\r\n    } as const\r\n}\r\n\r\n\r\n","\r\ntype InitialStateType = {\r\n\r\n}\r\n\r\nlet initialState: InitialStateType = {\r\n\r\n}\r\n\r\nexport type DispatchActionTypeRegistration =\r\n    | ReturnType <typeof someActionCreator>\r\n\r\n\r\nexport const registrationReducer = (state: InitialStateType = initialState, action: DispatchActionTypeRegistration ): InitialStateType => {\r\n\r\n    switch (action.type){\r\n\r\n        case \"SOME-TYPE\": {\r\n            return {...state}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const someActionCreator = () =>{\r\n    return {\r\n        type: \"SOME-TYPE\"\r\n    } as const\r\n}\r\n\r\n\r\n","\r\ntype InitialStateType = {\r\n\r\n}\r\n\r\nlet initialState: InitialStateType = {\r\n\r\n}\r\n\r\nexport type DispatchActionTypePassword =\r\n    | ReturnType <typeof someActionCreator>\r\n\r\n\r\nexport const passwordReducer = (state: InitialStateType = initialState, action: DispatchActionTypePassword ): InitialStateType => {\r\n\r\n    switch (action.type){\r\n\r\n        case \"SOME-TYPE\": {\r\n            return {...state}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const someActionCreator = () =>{\r\n    return {\r\n        type: \"SOME-TYPE\"\r\n    } as const\r\n}\r\n\r\n\r\n","\r\ntype InitialStateType = {\r\n\r\n}\r\n\r\nlet initialState: InitialStateType = {\r\n\r\n}\r\n\r\nexport type DispatchActionTypeProfile =\r\n    | ReturnType <typeof someActionCreator>\r\n\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: DispatchActionTypeProfile ): InitialStateType => {\r\n\r\n    switch (action.type){\r\n\r\n        case \"SOME-TYPE\": {\r\n            return {...state}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const someActionCreator = () =>{\r\n    return {\r\n        type: \"SOME-TYPE\"\r\n    } as const\r\n}\r\n\r\n\r\n","import { combineReducers } from \"redux\";\r\nimport { createStore } from \"redux\";\r\nimport { Store } from \"redux\";\r\nimport {loginReducer} from \"./b1-reducers/loginReducer\";\r\nimport {registrationReducer} from \"./b1-reducers/registrationReducer\";\r\nimport {passwordReducer} from \"./b1-reducers/passwordReducer\";\r\nimport {profileReducer} from \"./b1-reducers/profileReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    login: loginReducer,\r\n    profile: profileReducer,\r\n    registration: registrationReducer,\r\n    password: passwordReducer,\r\n\r\n})\r\n\r\nexport let store: Store = createStore(reducers);\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './f1-main/m1-ui/app/App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {HashRouter} from \"react-router-dom\";\nimport {store} from './f1-main/m2-bll/reduxStore';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <HashRouter>\n                <App/>\n            </HashRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}